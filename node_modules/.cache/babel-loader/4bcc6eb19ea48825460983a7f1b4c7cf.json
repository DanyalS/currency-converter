{"ast":null,"code":"import _defineProperty from \"/mnt/d/Work/converter-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/mnt/d/Work/converter-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/Work/converter-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/d/Work/converter-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/d/Work/converter-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/d/Work/converter-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/d/Work/converter-app/src/Converter.js\";\nimport React, { Component } from \"react\";\n\nvar Converter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Converter, _Component);\n\n  function Converter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Converter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Converter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currencies: [\"CAD\", \"GBP\", \"EUR\"],\n      base: \"CAD\",\n      amount: \"\",\n      convertTo: \"EUR\",\n      usd: \"USD\",\n      result: \"\",\n      date: \"\"\n    };\n\n    _this.handleSelect = function (e) {\n      var _this$setState;\n\n      _this.setState((_this$setState = {}, _defineProperty(_this$setState, e.target.name, e.target.value), _defineProperty(_this$setState, \"result\", null), _this$setState), _this.calculate);\n    };\n\n    _this.handleInput = function (e) {\n      _this.setState({\n        amount: e.target.value,\n        result: null\n      }, _this.calculate);\n    };\n\n    _this.calculate = function () {\n      var amount = _this.state.amount;\n\n      if (amount === isNaN) {\n        return;\n      } else {\n        fetch(\"https://api.exchangeratesapi.io/latest?base=\".concat(_this.state.base)).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          var result = (data.rates[_this.state.convertTo] * amount).toFixed(4);\n\n          _this.setState({\n            result: result\n          });\n        });\n      }\n    };\n\n    _this.handleSwap = function (e) {\n      var base = _this.state.base;\n      var convertTo = _this.state.convertTo;\n      e.preventDefault();\n\n      _this.setState({\n        convertTo: base,\n        base: convertTo,\n        result: null\n      }, _this.calculate);\n    };\n\n    return _this;\n  }\n\n  _createClass(Converter, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          currencies = _this$state.currencies,\n          base = _this$state.base,\n          amount = _this$state.amount,\n          convertTo = _this$state.convertTo,\n          usd = _this$state.usd,\n          result = _this$state.result,\n          date = _this$state.date;\n      return React.createElement(\"div\", {\n        className: \"container my-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 mx-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"currencies\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" \", amount, \" \", base, \" \"), \" is equevalent to\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, amount === \"\" ? \"0\" : result === null ? \"Calculating...\" : result, \" \", convertTo), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, amount === \"\" ? \"0\" : result === null ? \"Calculating...\" : result, \" \", usd)), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"form-inline mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        value: amount,\n        onChange: this.handleInput,\n        className: \"form-control form-control-lg mx-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"base\",\n        value: base,\n        onChange: this.handleSelect,\n        className: \"form-control form-control-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, currencies.map(function (currency) {\n        return React.createElement(\"option\", {\n          key: currency,\n          value: currency,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, currency);\n      }))), React.createElement(\"form\", {\n        className: \"form-inline mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        disabled: true,\n        value: amount === \"\" ? \"0\" : result === null ? \"Calculating...\" : result,\n        className: \"form-control form-control-lg mx-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"convertTo\",\n        value: convertTo,\n        onChange: this.handleSelect,\n        className: \"form-control form-control-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, currencies.map(function (currency) {\n        return React.createElement(\"option\", {\n          key: currency,\n          value: currency,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, currency);\n      })))), React.createElement(\"div\", {\n        className: \"col-lg-2 align-self-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        onClick: this.handleSwap,\n        className: \"swap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"\\u2193\\u2191\")))))));\n    }\n  }]);\n\n  return Converter;\n}(Component);\n\nexport default Converter;","map":{"version":3,"sources":["/mnt/d/Work/converter-app/src/Converter.js"],"names":["React","Component","Converter","state","currencies","base","amount","convertTo","usd","result","date","handleSelect","e","setState","target","name","value","calculate","handleInput","isNaN","fetch","then","res","json","data","rates","toFixed","handleSwap","preventDefault","map","currency"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Converter extends Component {\n  state = {\n    currencies: [\"CAD\", \"GBP\", \"EUR\"],\n    base: \"CAD\",\n    amount: \"\",\n    convertTo: \"EUR\",\n    usd: \"USD\",\n    result: \"\",\n    date: \"\"\n  };\n\n  handleSelect = e => {\n    this.setState(\n      {\n        [e.target.name]: e.target.value,\n        result: null\n      },\n      this.calculate\n    );\n  };\n\n  handleInput = e => {\n    this.setState(\n      {\n        amount: e.target.value, \n        result: null\n      },\n      this.calculate\n    );\n  };\n\n  calculate = () => {\n    const amount = this.state.amount; \n    if (amount === isNaN) {\n      return;\n    } else {\n      fetch(`https://api.exchangeratesapi.io/latest?base=${this.state.base}`)\n        .then(res => res.json())\n        .then(data => {\n          const result = (data.rates[this.state.convertTo] * amount).toFixed(4);\n          this.setState({\n            result,\n          });\n        });\n    }\n  };\n\n  handleSwap = e => {\n    const base = this.state.base;\n    const convertTo = this.state.convertTo;\n    e.preventDefault();\n    this.setState(\n      {\n        convertTo: base,\n        base: convertTo,\n        result: null\n      },\n      this.calculate\n    );\n  };\n\n  render() {\n    const { currencies, base, amount, convertTo, usd, result, date } = this.state;\n    return (\n      <div className=\"container my-5\">\n        <div className=\"row\">\n          <div className=\"col-lg-6 mx-auto\">\n            <div className=\"card card-body\">\n              <div class=\"currencies\">\n                <h5>\n                  <span class=\"bold\"> {amount} {base} </span> is equevalent to\n                </h5>\n                <h2>\n                  {amount === \"\"\n                    ? \"0\"\n                    : result === null\n                    ? \"Calculating...\"\n                    : result}{\" \"}\n                  {convertTo}\n                </h2>\n                <h2>\n                  {amount === \"\"\n                    ? \"0\"\n                    : result === null\n                    ? \"Calculating...\"\n                    : result}{\" \"}\n                  {usd}\n                </h2>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-lg-10\">\n                  <form className=\"form-inline mb-4\">\n                    <input\n                      type=\"number\"\n                      value={amount}\n                      onChange={this.handleInput}\n                      className=\"form-control form-control-lg mx-3\" \n                    />\n                    <select\n                      name=\"base\"\n                      value={base}\n                      onChange={this.handleSelect}\n                      className=\"form-control form-control-lg\"\n                    >\n                      {currencies.map(currency => (\n                        <option key={currency} value={currency}>\n                          {currency}\n                        </option>\n                      ))}\n                    </select> \n                  </form>\n\n                  <form className=\"form-inline mb-4\">\n                    <input\n                      disabled={true}\n                      value={\n                        amount === \"\"\n                          ? \"0\"\n                          : result === null\n                          ? \"Calculating...\"\n                          : result\n                      }\n                      className=\"form-control form-control-lg mx-3\"\n                    />\n                    <select\n                      name=\"convertTo\"\n                      value={convertTo}\n                      onChange={this.handleSelect}\n                      className=\"form-control form-control-lg\"\n                    >\n                      {currencies.map(currency => (\n                        <option key={currency} value={currency}>\n                          {currency}\n                        </option>\n                      ))}\n                    </select>\n                  </form>\n                </div>\n\n                <div className=\"col-lg-2 align-self-center\">\n                  <h1 onClick={this.handleSwap} className=\"swap\">\n                    &#8595;&#8593;\n                  </h1>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Converter;\n"]},"metadata":{},"sourceType":"module"}
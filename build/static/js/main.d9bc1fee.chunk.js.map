{"version":3,"sources":["Converter.js","index.js"],"names":["Converter","state","currencies","base","amount","amountUSD","convertTo","usd","result","resultUSD","handleSelect","e","_this$setState","_this","setState","Object","defineProperty","target","name","value","calculate","handleInput","isNaN","fetch","concat","then","res","json","data","rates","toFixed","handleSwap","preventDefault","_this$state","this","date","react_default","a","createElement","className","class","type","placeholder","ref","onChange","id","onClick","handleClick","map","currency","key","disabled","Component","rootElement","document","getElementById","ReactDOM","render","src_Converter"],"mappings":"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","file":"static/js/main.d9bc1fee.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n//Gets the neccessary currencies needed.\nclass Converter extends Component {\n  state = {\n    currencies: [\"CAD\", \"GBP\", \"EUR\"],\n    base: \"CAD\",\n    amount: \"\",\n    amountUSD: \"\",\n    convertTo: \"EUR\",\n    usd: \"USD\",\n    result: \"\",\n    resultUSD: \"\"\n  };\n\n  handleSelect = e => {\n    this.setState(\n      {\n        [e.target.name]: e.target.value,\n        result: null\n      },\n      this.calculate\n    );\n  };\n\n  handleInput = e => {\n    this.setState(\n      {\n        amount: e.target.value, \n        result: null\n      },\n      this.calculate\n    );\n  };\n\n  //Gets the updated currency rates from the API and does the currency exchange.\n  calculate = () => {\n    const amount = this.state.amount; \n    const amountUSD = this.state.amount;  \n    if (amount === isNaN) {\n      return;\n    } else {\n      fetch(`https://api.exchangeratesapi.io/latest?base=${this.state.base}`)\n        .then(res => res.json())\n        .then(data => {\n          const result = (data.rates[this.state.convertTo] * amount).toFixed(4); \n          const resultUSD = (data.rates[this.state.usd] * amountUSD).toFixed(4); \n          this.setState({\n            result, \n            resultUSD, \n          });\n        });\n    }\n  };\n\n  //This handles the currency swap when the swap button is pressed.\n  handleSwap = e => {\n    const base = this.state.base;\n    const convertTo = this.state.convertTo;\n    e.preventDefault();\n    this.setState(\n      {\n        convertTo: base,\n        base: convertTo,\n        result: null\n      },\n      this.calculate \n    );\n  };\n\n  //Renders UI elements.\n  render() {\n    const { currencies, base, amount, amountUSD, convertTo, usd, result, resultUSD, date } = this.state; \n    return (\n      <div className=\"container my-5\"> \n        <div className=\"row\">\n          <div className=\"col-lg-6 mx-auto\">\n            <div className=\"card card-body\">\n              <div class=\"currencies\">\n                <h5>\n                  <span class=\"bold\"> {amount} {base} </span> is equivalent to\n                </h5>\n                {/*Displays the currency the input is being converted to.*/}\n                <h2>\n                  {amount === \"\" \n                    ? \"0\"\n                    : result === null\n                    ? \"Calculating...\"\n                    : result}{\" \"}\n                  {convertTo}\n                </h2>\n                {/*Displays the input currency in USD.*/}\n                <h2>\n                  {amount === \"\"\n                    ? \"0\"\n                    : resultUSD === null\n                    ? \"Calculating...\"\n                    : resultUSD}{\" \"}\n                  {usd}\n                </h2>\n              </div>\n            {/*The input and dropdowns where the user selects the currencies being converted and the amount*/}\n              <div className=\"row\">\n                <div className=\"col-lg-10\">\n                  <form className=\"form-inline mb-4\"> \n\n                    <input \n                      type=\"number\"\n                      placeholder=\"Enter Amount Here...\" \n                      ref=\"form\"\n                      value={amount}\n                      onChange={this.handleInput}\n                      id=\"formInput\"\n                      className=\"form-control form-control-clear form-control-lg mx-3\" \n                    />\n                    <button className=\"clear-button\" onClick={this.handleClick}><i class=\"fas fa-times-circle\"></i></button>\n                    <select\n                      name=\"base\"\n                      value={base}\n                      onChange={this.handleSelect}\n                      className=\"form-control form-control-lg\"\n                    >\n                      {currencies.map(currency => (\n                        <option key={currency} value={currency}> \n                          {currency}\n                        </option>\n                      ))}\n                    </select> \n                  </form>\n\n                  <form className=\"form-inline mb-4\">\n                    <input\n                      disabled={true}\n                      value={\n                        amount === \"\"\n                          ? \"0\"\n                          : result === null\n                          ? \"Calculating...\"\n                          : result\n                      }\n                      className=\"form-control form-control-lg mx-3\"\n                    />\n                    <select\n                      name=\"convertTo\"\n                      value={convertTo}\n                      onChange={this.handleSelect}\n                      className=\"form-control form-control-lg\"\n                    >\n                      {currencies.map(currency => (\n                        <option key={currency} value={currency}> \n                          {currency}\n                        </option>\n                      ))}\n                    </select>\n                  </form>\n                </div>\n\n              {/*Button to swap the currencies that are being converted*/}\n                <div className=\"col-lg-6 align-self-center\">\n                  <h1 onClick={this.handleSwap} className=\"swap\"> \n                    &#8595;&#8593;\n                  </h1>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Converter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Converter from \"./Converter\";\n\nimport \"./styles.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Converter />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}